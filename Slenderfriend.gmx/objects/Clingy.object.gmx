<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>clingy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ScaredGuy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
is_freaked_out = false;
moving = true;
rx = 0;
ry = 0;
at_point = true;
chill = false;
draw_capture = false;
my_health = 5;
is_clingy = false;
clingy_phrase = 0;
is_betrayed = false;
betrayed_phrase = 0;
is_punched = false;

mhspeed = 0;
mvspeed = 0;

dir = "up";


randomize();
if (random(1) &gt;= .5)
{
    chill = true;
}
chill_time = random(7);
alarm[1] = room_speed * chill_time;


clingy_talk[0] = "Let's be friends forever and ever!";
clingy_talk[1] = "Why don't you have face?";
clingy_talk[2] = "Hey, can I borrow some money? Like, $1000?";
clingy_talk[3] = "Yay this is fun! FUUUNNNN!";
clingy_talk[4] = "BEST FRIEND! BEST FRIEND! BEST FRIEND!";

betrayed_talk [0] = "Oh, you don't want to be friends?";
betrayed_talk [1] = "That's cool... most of my friends have faces anyways.";
betrayed_talk [2] = "Good bye forever...";


my_type = global.friend_type[1];

friend_max = 4;

friend_speed = score_keeper.enemy_speed;

image_speed = .01;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score_keeper.decrement = true;
score_keeper.decrement_amount = score_keeper.enemy_drain;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clingy_phrase = floor(random_range(0,4.9));

if (is_betrayed &amp;&amp; betrayed_phrase &lt; 3)
{
    betrayed_phrase += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>at_point = true;

if(!chill)
    chill = true;
else
    chill = false;
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!is_clingy)
{

//get scared
if(distance_to_object(Slenderfriend) &lt; 30)
{
    is_freaked_out = true;
}

//get not scared
if(distance_to_object(Slenderfriend) &gt; 300  &amp;&amp; !moving)
{
    is_freaked_out = false;
    moving = true;
    at_point = true;
    chill = false;
}

if (is_freaked_out &amp;&amp; !Slenderfriend.in_friendzone)
{
    //draw_set_color(c_black);
    //draw_text(x+10, y+10, "AHHHHHHHH!!!!");
    move_towards_point(Slenderfriend.x, Slenderfriend.y,-1 * friend_speed);
    if (Slenderfriend.x &gt; x)
    {
        sprite_index = clingy_walk;
        image_xscale = 1;
        image_speed = .5;
    }
    else
    {
        sprite_index = clingy_walk;
        image_xscale = -1;
        image_speed = .5;
    }
    moving = false;
}

if (moving)
{

    if (distance_to_point(rx, ry) &lt; 2)
    {
        at_point = true;
    }
    
    if (at_point)
    {
        randomize();
        draw_text(x + 20, y + 20, "At point");
        rx = floor(random(room_width));
        ry = floor(random(room_height));
        at_point = false;
        alarm[1] = room_speed * chill_time;
    }
    if (!chill)
    {
        move_towards_point(rx,ry,1);
        if (rx &gt; x)
        {
            sprite_index = clingy_walk;
            image_xscale = -1;
            image_speed = .2;
        }
        else if (rx &lt; x)
        {
            sprite_index = clingy_walk;
            image_xscale = 1;
            image_speed = .2;
        }
    }
    if (chill)
    {
        sprite_index = clingy_friend_sprite;
        image_xscale = 1;
        image_speed = .01;
        move_towards_point(0,0,0);
    }
}

if (distance_to_object(Slenderfriend) &lt; 10)
{
    draw_capture = true;
}
else
{
    draw_capture = false;
}

if (draw_capture &amp;&amp; keyboard_check(ord("R")))
{
    instance_destroy();
    score_keeper.self_esteem += score_keeper.friend_add;
    score_keeper.friend_count += 1;
}
}

if (is_punched)
{
    is_punched = false;

    is_clingy = true;
    persistent = true;
    Slenderfriend.set_clingy_friend = true;
    Slenderfriend.clingy_attack = true;
    show_debug_message("Clingy friend attack!");            
}

if (is_clingy &amp;&amp; !is_betrayed)
{
    cling_x = Slenderfriend.x;
    cling_y = Slenderfriend.y;
    
    if (distance_to_object(Slenderfriend) &gt; 20)
    {
        move_towards_point(cling_x, cling_y, 3);
        if (Slenderfriend.x &gt; x)
        {
        sprite_index = clingy_walk;
        image_xscale = -1;
        image_speed = .7;
        }
        else
        {
        sprite_index = clingy_walk;
        image_xscale = 1;
        image_speed = .7;
        }   
    }
        
    if (alarm[3] &lt; 0)
        alarm[3] = 3 * room_speed;
    
    if (distance_to_object(Slenderfriend) &lt; 30)
    {
        if(alarm[4] &lt; 0)
            alarm[4] = .5 * room_speed;
    }
    
}

if (is_betrayed)
{
  persistent = false;
  move_towards_point(0,y,1.5);
  
  sprite_index = clingy_walk;
  image_xscale = 1;
  image_speed = .2;
  
  if (x &lt;= 0)
  {
    instance_destroy();
  }
}

if (!is_betrayed)
stay_in_bounds();
    

//regenerate health
if (is_freaked_out &amp;&amp; my_health &lt;= 5)
    my_health += .5 / room_speed;
else if (my_health &lt;= 5)
    my_health += 1 / room_speed;

if (my_health &lt;= 0)
{
    instance_destroy();
    score_keeper.friend_count += 1;
    score_keeper.increment = true;
    score_keeper.amount = global.friend_value[0];
}


if (keyboard_check_pressed(ord("V")))
{
    friend_max += 1;
}

friend_speed = 2 + logn(10,score_keeper.difficulty);
if (friend_speed &gt;= friend_max)
    friend_speed = friend_max - .1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;

if (is_freaked_out &amp;&amp; !is_clingy &amp;&amp; !is_betrayed &amp;&amp; !Slenderfriend.in_friendzone)
{
    draw_set_color(c_white);
    draw_set_font(default_font);
    draw_text(x-40, y-80, "AHHHHH!!!!");
}

/*else if (chill)
{
    draw_set_color(tile_drawer.sprite_color);
    draw_text(x, y-25, my_type);
    }
else if (!chill)
{
    draw_set_color(tile_drawer.sprite_color);
    draw_text(x, y-25, "walking");
}*/

//draw_text(x, y+40, string(my_health));

if (is_clingy &amp;&amp; !is_betrayed)
{
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    if (room == friendzone)
        draw_set_color(c_black);
    draw_text(x-16, y-80, clingy_talk[clingy_phrase]);
    draw_set_halign(fa_left);
}

if (is_betrayed)
{
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    draw_text(x-16, y-80, betrayed_talk[betrayed_phrase]);
    draw_set_halign(fa_left);
}

image_alpha = 1 - (2 * (5 - my_health)/10);

draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
