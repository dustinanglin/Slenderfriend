<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>normal_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ScaredGuy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_freaked_out = false;
moving = true;
rx = 0;
ry = 0;
at_point = true;
chill = false;
draw_capture = false;
is_punched = false;
health_max = score_keeper.enemy_health;
my_health = health_max;

mhspeed = 0;
mvspeed = 0;

dir = "up";

mutton_friction = 1;

randomize();
if (random(1) &gt;= .5)
{
    chill = true;
}
chill_time = random(7);
alarm[1] = room_speed * chill_time;



my_type = global.friend_type[0];

friend_max = 4;

friend_speed = score_keeper.enemy_speed;

image_speed = 6;


scream_play = false;
played_sup = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>at_point = true;

if(!chill)
    chill = true;
else
    chill = false;
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (!Slenderfriend.in_friendzone)
{
//get scared
if(distance_to_object(Slenderfriend) &lt; 30)
{
    is_freaked_out = true;
}

//get not scared
if(distance_to_object(Slenderfriend) &gt; 300  &amp;&amp; !moving)
{
    is_freaked_out = false;
    moving = true;
    at_point = true;
    chill = false;
    scream_play = false;
}

if (is_freaked_out)
{
    //draw_set_color(c_black);
    //draw_text(x+10, y+10, "AHHHHHHHH!!!!");
    if (!scream_play)
    {
        scream_play = true;
        play_scream();
    }
    move_towards_point(Slenderfriend.x, Slenderfriend.y,-1 * friend_speed);
    if (Slenderfriend.x &gt; x)
    {
        sprite_index = normal_walk;
        image_xscale = 1;
        image_speed = .5;
    }
    else
    {
        sprite_index = normal_walk;
        image_xscale = -1;
        image_speed = .5;
    }
    moving = false;
}

}

if (moving)
{

    if (distance_to_point(rx, ry) &lt; 2)
    {
        at_point = true;
    }
    
    if (at_point)
    {
        randomize();
        draw_text(x + 20, y + 20, "At point");
        rx = floor(random(room_width));
        ry = floor(random(room_height));
        at_point = false;
        alarm[1] = room_speed * chill_time;
    }
    if (!chill)
    {
        if (rx &gt; x)
        {
            sprite_index = normal_walk;
            image_xscale = -1;
            image_speed = .2;
        }
        else if (rx &lt; x)
        {
            sprite_index = normal_walk;
            image_xscale = 1;
            image_speed = .2;
        }
        move_towards_point(rx,ry,1);
    }
    if (chill)
    {
        move_towards_point(0,0,0);
        sprite_index = normal_idle;
        image_xscale = 1;
        image_speed = .01;
    }
}

if (distance_to_object(Slenderfriend) &lt; 10)
{
    draw_capture = true;
}
else
{
    draw_capture = false;
}

/*if (draw_capture &amp;&amp; keyboard_check(ord("R")))
{
    instance_destroy();
    score_keeper.self_esteem += score_keeper.friend_add;
    score_keeper.friend_count += 1;
}*/


if (is_punched)
{
    is_punched = false;
    my_health -= Slenderfriend.slender_punch;
}

if (my_health &lt;= 0)
{
    instance_destroy();
    score_keeper.friend_count += 1;
    score_keeper.increment = true;
    score_keeper.amount = global.friend_value[0];
    score_keeper.normal_count += 1;
    score_keeper.total_friends += 1;
    score_keeper.friend_increment = true;
    instance_create(x,y,friend_death);
}

//regenerate health
if (is_freaked_out &amp;&amp; my_health &lt;= health_max)
    my_health += 1 / room_speed;
else if (my_health &lt;= health_max)
    my_health += 2 / room_speed;

friend_speed = 2 + logn(10,score_keeper.difficulty);
if (friend_speed &gt;= friend_max)
    friend_speed = friend_max - .1;
    
stay_in_bounds();

    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;


if (is_freaked_out)
{
    draw_set_color(c_white)
    draw_set_font(default_font);
    draw_text(x-40, y-80, "AHHHHH!!!!");
}

if (distance_to_object(Slenderfriend) &lt; 100 &amp;&amp; Slenderfriend.in_friendzone)
{
    draw_set_color(c_black);
    draw_set_font(default_font);
    draw_text(x-40, y-80, "Sup bro!");
    if(!played_sup)
    {
        play_sup();
        played_sup = true;
    }
}

if (distance_to_object(Slenderfriend) &gt; 100 &amp;&amp; Slenderfriend.in_friendzone)
{
    played_sup = false;
}
/*else if (chill)
{
    draw_set_color(tile_drawer.sprite_color);
    draw_text(x, y-25, my_type);
    }
else if (!chill)
{
    draw_set_color(tile_drawer.sprite_color);
    draw_text(x, y-25, "walking");
}*/

if (my_health &lt; health_max)
{
draw_set_alpha(1);
draw_set_color(make_color_rgb(0,255,0));
draw_rectangle(x-25,y-65,x+25,y-60,false);
draw_set_color(make_color_rgb(255,0,0));
draw_rectangle(x-25+(50*my_health/health_max),y-65,x+25,y-60,false);
}


//image_alpha = 1 - (2 * (5 - my_health)/10);

draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
