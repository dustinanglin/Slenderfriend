<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scaling difficulty variables
enemy_speed = 2;
enemy_speed_max = 4;

enemy_health = 10;
enemy_health_max = 20;

enemy_friction = 5;
enemy_friction_max = 7;

enemy_timer = 16;
enemy_timer_min = 11;

enemy_drain = .1;
enemy_drain_max = 1;

frame = 0;

level = 0;
total_friends = 0;
increment_enemy = false;
friend_increment = false;
draw_difficulty = false;
draw_new_friend = false;


sign_post_alpha = 0;


max_self_esteem = 100;
clingy_help = "";
self_esteem = 100;
esteem_degrade = 1;
friend_add = 1;
friend_count = 0;
pause = false;
global.gameover = false;
got_all_friends = false;
increment = false;
amount = 0;
inc_x = 0;
inc_y = 0;
dec_x = 0;
dec_y = 0;
draw_inc = 0;
inc_alpha = 1;
draw_dec = 0;
dec_alpha = 1;
dx = 0;
dy = 0;
friction_value = 0;

normal_count = 0;
mutton_count = 0;
ninja_count = 0;


decrement = false;
decrement_amount = 0;

alarm[0] = room_speed * 2;

difficulty = 1;
//increment is max height of health bar / max self esteem
health_increment = 700 / max_self_esteem;
health_height = 0;

blink = false;

//starting global types
global.friend_type[0] = "friend";
global.friend_type[2] = "mutton";
global.friend_type[1] = "clingy";
global.friend_type[3] = "ninja";

//
global.friend_value[0] = 2;
global.friend_value[2] = 5;
global.friend_value[1] = 4;
global.friend_value[3] = 6;

//incrementable array range
global.friend_range = 4;

death_x = 0;
death_y = 0;
draw_death = false;

played_static = false;

/*instance_create(512,284,screen_static);
screen_static.visible = false;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sign_post_alpha &gt; 0)
{
    sign_post_alpha -= .05;
    alarm[5] = .1 * room_speed;
}
else
{
    draw_new_friend = false;
    draw_difficulty = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (clingy_help = "")
{
    clingy_help = "AHHH!!! FIND A NEW FRIEND!!!";
}
else
    clingy_help = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

dec_alpha -= .1;
if (dec_alpha &gt; 0)
{
    alarm[3] = .05 * room_speed;
    dec_y += 2;
    dec_x += 2;
}
else
{
    draw_dec = false;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inc_alpha -= .1;
if (inc_alpha &gt; 0)
{
    alarm[2] = .1 * room_speed;
    inc_y += 2;
    inc_x += 2;
}
else
{
    draw_inc = false;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (blink)
{
    blink = false;
}
else
    blink = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!pause)
{
  decrement = true;
  decrement_amount = esteem_degrade;
}

alarm[0] = room_speed * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dx = Slenderfriend.x;
dy = Slenderfriend.y;

if (room == friendzone)
{
    pause = true;
}

if (self_esteem &lt;= 0)
{
    global.gameover = true;
    pause = true;
}


if (keyboard_check_pressed(ord("C")))
{
    difficulty += 1;
}

health_height = (max_self_esteem - self_esteem) * health_increment;

if (global.gameover &amp;&amp; keyboard_check_pressed(ord("R")))
{
    game_restart();
}

if (increment)
{
    increment = false;
    //draw increment animation
    inc_x = 0;
    inc_y = 0;
    draw_inc = true;
    inc_alpha = 1;
    alarm[2] = 1;
    self_esteem += amount;
    if (self_esteem &gt; max_self_esteem)
    {
        self_esteem = max_self_esteem;
    }
}

if (decrement)
{
    decrement = false;
    //draw decrement animation
    dec_x = 0;
    dec_y = 0;
    draw_dec = true;
    dec_alpha = 1;
    alarm[3] = 1;
    self_esteem -= decrement_amount;
    if (self_esteem &lt;=0)
    {
        self_esteem = 0;
    }
    audio_play_sound(health_down,15,false);
}



if (total_friends &lt; 10)
{
    show_debug_message("level 1");
    global.friend_range = 1;
}
else if (total_friends &lt; 20)
{
    show_debug_message("level 2");
    global.friend_range = 2;
    if (friend_increment &amp;&amp; total_friends == 10)
    {
        draw_new_friend = true;
        friend_increment = false;
        alarm[5] = 1;
        sign_post_alpha = 1;
    }
}
else if (total_friends &lt; 30)
{
    show_debug_message("level 3");
    global.friend_range = 3;
    if (friend_increment &amp;&amp; total_friends == 20)
    {
        draw_new_friend = true;
        friend_increment = false;
        alarm[5] = 1;
        sign_post_alpha = 1;
    }
}
else if (total_friends &lt; 40)
{
    show_debug_message("level 4");
    global.friend_range = 4;
    if (friend_increment &amp;&amp; total_friends == 30)
    {
        draw_new_friend = true;
        friend_increment = false;
        alarm[5] = 1;
        sign_post_alpha = 1;
    }
}
else if (total_friends &gt;= 40 &amp;&amp; (total_friends % 10 == 0) &amp;&amp; friend_increment)
{
    show_debug_message("difficult level up");
    global.friend_range = 4;
    increment_enemy = true;
    friend_increment = false;
    draw_difficulty = true;
    alarm[5] = 1;
    sign_post_alpha = 1;
}


if (increment_enemy)
{
    if (enemy_speed &lt; enemy_speed_max)
    {
        enemy_speed += .1;
        show_debug_message(string(enemy_speed));
    }
    if (enemy_health &lt; enemy_health_max)
        enemy_health += .5;
    if (enemy_friction &lt; enemy_friction_max)
        enemy_friction += 1;
    if (enemy_drain &lt; enemy_drain_max)
        enemy_drain += .1;
    if (enemy_timer &gt; enemy_timer_min)
        enemy_timer -= 1;
        
    increment_enemy = false;
}


/*if (keyboard_check_pressed(ord("T")))
{
    total_friends += 10;
    friend_increment = true;
    show_debug_message("friend count:" + string(total_friends));
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == friendzone)
    draw_set_color(c_black)
else
    draw_set_color(c_white);

//draw_text(20, 20, "Self Esteem: " + string(self_esteem));
draw_set_font(big_font);
draw_text(20, 15, "Friends: " + string(friend_count));

if (room != friendzone)
{
    draw_set_font(default_font);
    draw_text(60,55,"Return to friendzone");
    draw_sprite_ext(f_key,0,15, 50,.3,.3,0,-1,1);
}
//draw_text(20, 60, string(logn(2,difficulty)));
//draw_text(20, 80, string(difficulty));
//draw_text(20, 100, string(room));
//draw_text(20, 120, string(room_persistent));

draw_sprite(health_bar, 0, 1024 - 50 ,768/2);

if (self_esteem/max_self_esteem &gt; .64)
{
    //draw good health
    draw_sprite(happy_health,0,1024-50, 768 - 614);
}
else if (self_esteem/max_self_esteem &gt; .29)
{
    //draw ok health
    draw_sprite(ok_health,0,1024-50, 768 - 363);
    screen_static.visible = false;
}
else if (alarm[1] &lt;= 0) 
{
    //blink bad health
    alarm[1] = .5 * room_speed;      
}



if (blink)
{
    draw_sprite(danger_health,0,1024-50, 768 - 134);
}




draw_sprite(health_select, 0, 1024 - 50 - 25, 30 + health_height);
//draw_sprite_ext(health_header,0,1024 - 50, 35, .2, .2,0,-1,1);



if (Slenderfriend.ride_along)
{
    //show_debug_message(string(friction_value));
    draw_set_color(c_blue);
    draw_rectangle(37,768-100,37+(430 * (friction_value-1)/(enemy_friction-1)),768-50,false);
    
    draw_sprite_ext(wrangle_bar,0,35,768-75,1,1,0,-1,1);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_font(big_font);
    draw_text(175, 768-92, "WRANGLE!");
    draw_set_font(default_font);
      
}
else if (Slenderfriend.clingy_attack)
{
    //show_debug_message("draw attack help");
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_font(big_font);
    if(alarm[4] &lt; 0)
        alarm[4] = .5 * room_speed;
    draw_text(35, 768-75, clingy_help);
    draw_set_font(default_font);
}
else if (Slenderfriend.show_attack &amp;&amp; !Slenderfriend.in_friendzone)
{
    //show_debug_message("draw attack help");
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_font(big_font);
    draw_text(35, 768-75, "SEND TO FRIEND ZONE");
    draw_set_font(default_font);
    draw_sprite_ext(j_key,0,500, 768-60,.5,.5,0,-1,1);
    draw_sprite_ext(green_arrow,0,498,768-95,.5,.5,0,-1,1);
}

if (room == friendzone)
{
    //show_debug_message("draw attack help");
    draw_set_color(c_black);
    draw_set_alpha(1);
    draw_set_font(big_font);
    draw_text(35, 768-75, "FIND SOME MORE FRIENDS");
    draw_set_font(default_font);
    draw_sprite_ext(f_key,0,530, 768-90,.5,.5,0,-1,1);
}

if (sign_post_alpha &gt; 0)
{
    if(draw_new_friend)
    {
        draw_sprite_ext(new_friend, 0, 1024/2, 200,.4,.4,0,-1,sign_post_alpha);
    }
    
    if(draw_difficulty)
    {
        draw_sprite_ext(difficulty_sprite, 0, 1024/2, 200,.4,.4,0,-1,sign_post_alpha);
    }
}

if (self_esteem/max_self_esteem &lt;= .10 &amp;&amp; !global.gameover)
{
    draw_sprite_ext(full_static,frame,512,384,1,1,0,-1, .5 - ((self_esteem/max_self_esteem)/.10)/2);
    frame += 1;
    if (frame == 8)
        frame = 0;
        
    if (!played_static &amp;&amp; (.5 - ((self_esteem/max_self_esteem)/.10)/2) &gt; 0)
    {
        played_static = true;
        static_sound = audio_play_sound(static_end,6,true);
    }
    
    if ((.5 - ((self_esteem/max_self_esteem)/.10)/2) &lt;= 0)
    {
        audio_stop_sound(static_end);
        played_static = false;
    }

    if ((.5 - ((self_esteem/max_self_esteem)/.10)/2)&gt; 0)
    {
        audio_sound_gain(static_sound,.5 - ((self_esteem/max_self_esteem)/.10)/2,0);
    }
}

if (global.gameover)
{
    draw_sprite_ext(full_static,frame,512,384,1,1,0,-1, 1);
    frame += 1;
    if (frame == 8)
        frame = 0;
    
    
    draw_set_color(c_black);
    draw_set_alpha(.6);
    draw_rectangle(0,0,1024,768,false);
    draw_set_alpha(1);
    draw_sprite(game_over,0,1023/2, 300);
    
    draw_set_color(c_white);
    draw_set_font(default_font);
    draw_set_halign(fa_center);
    draw_text(1024/2, 768-300, "You ran out of self esteem :(" + "#Slenderman's need for friendship can't be quenched" + "#But you earned a total of " + string(total_friends) + " friends!" + "  Way to go!" + "#" + "#Press R to Restart");
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(default_font);

if (draw_inc)
{
    depth = -20000;
    draw_set_font(default_font);
    draw_set_alpha(inc_alpha);
    draw_set_color(make_color_rgb(0,255,0));
    draw_text(dx + 5 + inc_x, dy - 15 - inc_y, "+" + string(amount));
    draw_set_alpha(1);
    draw_set_color(c_white);
}

if (draw_dec)
{
    depth = -15000;
    draw_set_font(default_font);
    draw_set_alpha(dec_alpha);
    draw_set_color(make_color_rgb(255,0,0));
    draw_text(dx + 5 + dec_x, dy - 45 - dec_y, "-" + string(decrement_amount));
    draw_set_alpha(1);
    draw_set_color(c_white);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
